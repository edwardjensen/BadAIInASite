name: Update menu.json file only and reload app container

on:
  push:
    paths:
      - 'menu.json'
    branches:
      - main

jobs:
  deploy-menu:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo -e "Host ${{ secrets.DEPLOY_HOST }}\n\tStrictHostKeyChecking no\n" > ~/.ssh/config

      - name: Connect to Tailscale Network
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:github-actions
        
      - name: Deploy menu.json
        run: |
          # Ensure config directory exists
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} \
            "mkdir -p ${{ secrets.DEPLOY_MENU_PATH }}"
          
          # Check if a custom menu.json exists on the server
          CUSTOM_MENU_EXISTS=$(ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} \
            "if [ -f ${{ secrets.DEPLOY_MENU_PATH }}/menu.json ]; then echo 'true'; else echo 'false'; fi")
          
          if [ "$CUSTOM_MENU_EXISTS" = "true" ]; then
            echo "üìã Custom menu.json detected on server"
            echo "‚ö†Ô∏è  Skipping menu update to preserve custom configuration"
            echo "üìã To force update, manually remove the custom menu.json file on the server"
            echo "üìã Custom menu location: ${{ secrets.DEPLOY_MENU_PATH }}/menu.json"
          else
            echo "üìã No custom menu found - deploying repository menu.json..."
            # Copy menu.json to server
            scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa menu.json ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:${{ secrets.DEPLOY_MENU_PATH }}/
            
            # Restart container to pick up changes
            ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} \
              "docker restart badaiinasite || echo 'Container restart failed - may need initial deployment'"
          fi

      - name: Cleanup SSH key
        if: always()
        run: |
          rm -f ~/.ssh/id_rsa

      - name: Deployment success notification
        run: |
          echo "üéâ Successfully deployed update to menu.json!"
          echo "üöÄ Container restarted to apply changes"