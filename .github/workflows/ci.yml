# .github/workflows/ci.yml
# Replaces deploy.yml - builds and tests but does NOT deploy
name: Continuous Integration

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/badaiinasite

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      should-build: ${{ steps.changes.outputs.should-build }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 2
    
    - name: Check for app file changes
      id: changes
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "should-build=true" >> $GITHUB_OUTPUT
        elif [ "${{ github.event_name }}" = "pull_request" ]; then
          echo "should-build=true" >> $GITHUB_OUTPUT
        elif git diff --name-only HEAD~1 HEAD | grep -E '^(src/|public/|package\.json|Dockerfile|settings\.conf|menu\.json)'; then
          echo "should-build=true" >> $GITHUB_OUTPUT
        else
          echo "should-build=false" >> $GITHUB_OUTPUT
        fi

  test-and-build:
    needs: check-changes
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write
    if: needs.check-changes.outputs.should-build == 'true'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch,suffix=-dev
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          # Note: No 'latest' tag for development builds

    - name: Build and push development image
      uses: docker/build-push-action@v6
      with:
        context: .
        platforms: linux/amd64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Run tests
      run: |
        echo "ðŸ§ª Running tests..."
        # Add your test commands here if needed:
        # npm test
        # docker run --rm ${{ steps.meta.outputs.tags }} npm test
        echo "âœ… Tests passed"

  deployment-ready:
    needs: [check-changes, test-and-build]
    runs-on: ubuntu-latest
    if: |
      !cancelled() && 
      needs.check-changes.outputs.should-build == 'true' &&
      github.ref == 'refs/heads/main' && 
      github.event_name == 'push'

    steps:
    - name: Deployment readiness
      run: |
        echo "ðŸš€ Code is ready for deployment!"
        echo ""
        echo "ðŸ“‹ To deploy to production:"
        echo "   1. Create a release tag: git tag v1.0.0"
        echo "   2. Push the tag: git push origin v1.0.0" 
        echo "   3. The release workflow will build and deploy automatically"
        echo ""
        echo "ðŸ’¡ Development image available at:"
        echo "   ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main-dev"